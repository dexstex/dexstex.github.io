"use strict";const CONSTANTS={API_URL:"https://api.lanyard.rest/v1",WEBSOCKET_URL:"wss://api.lanyard.rest/socket",HEARTBEAT_PERIOD:3e4};async function lanyard(e){if(!e)throw Error("Specify an options object");if(!e.userId)throw Error("Specify a user ID");if(e.socket){if(!e.onPresenceUpdate)throw Error("Specify onPresenceUpdate callback");let s="WebSocket"in window||"MozWebSocket"in window;if(!s)throw Error("Browser doesn't support WebSocket connections.");let r=new WebSocket(CONSTANTS.WEBSOCKET_URL),t="string"==typeof e.userId?"subscribe_to_id":"subscribe_to_ids";return r.addEventListener("open",()=>{r.send(JSON.stringify({op:2,d:{[t]:e.userId}})),setInterval(()=>{r.send(JSON.stringify({op:3}))},CONSTANTS.HEARTBEAT_PERIOD)}),r.addEventListener("message",({data:s})=>{let{t:r,d:t}=JSON.parse(s);("INIT_STATE"===r||"PRESENCE_UPDATE"===r)&&e.onPresenceUpdate(t)}),r}if("string"==typeof e.userId){let n=await fetch(`${CONSTANTS.API_URL}/users/${e.userId}`),o=await n.json();if(!o.success)throw Error(o.error?.message||"An invalid error occured");return o.data}{let i=[];for(let a of e.userId){let c=await fetch(`${CONSTANTS.API_URL}/users/${a}`),d=await c.json();if(!d.success)throw Error(d.error?.message||"An invalid error occured");i.push(d.data)}return i}}
